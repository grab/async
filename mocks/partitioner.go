// Copyright 2019 Grabtaxi Holdings PTE LTE (GRAB), All rights reserved.
// Use of this source code is governed by an MIT-style license that can be found in the LICENSE file

// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import (
	"github.com/kelindar/async"
	"github.com/stretchr/testify/mock"
)

// Partitioner is an autogenerated mock type for the Partitioner type
type Partitioner struct {
	mock.Mock
}

// Append provides a mock function with given fields: items
func (_m *Partitioner) Append(items interface{}) async.Task {
	ret := _m.Called(items)

	var r0 async.Task
	if rf, ok := ret.Get(0).(func(interface{}) async.Task); ok {
		r0 = rf(items)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(async.Task)
		}
	}

	return r0
}

// Partition provides a mock function with given fields:
func (_m *Partitioner) Partition() map[string][]interface{} {
	ret := _m.Called()

	var r0 map[string][]interface{}
	if rf, ok := ret.Get(0).(func() map[string][]interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string][]interface{})
		}
	}

	return r0
}
